name: Build and upload to PyPI

on:
  pull_request:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3

      - name: Test against oldest supported numpy version
        shell: bash
        run: |
            python -m pip install ./wheelhouse/*cp310*.whl
            python -m pip install numpy==1.21.3 scipy==1.8 pytest
            pytest --pyargs nlsam --verbose

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-nlsam_${{ matrix.os }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.10'

      - name: Build sdist
        run: |
          python -m pip install build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_pyinstaller:
    name: Build pyinstaller on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-13, macos-14]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.13'

      - name: Get pyinstaller
        shell: bash
        run: |
          pip install pyinstaller
          pip install -e .

          path=$(python -c "import distributed; print(distributed.__path__[0]);")
          echo "version=v$(python -c "from importlib.metadata import version; print(version('nlsam'));")" >> $GITHUB_ENV
          tempfolder=temp_${{ runner.os }}_${{ runner.arch }}
          mkdir $tempfolder
          pyinstaller ./nlsam/script.py -n nlsam_denoising -F --clean --noupx --specpath $tempfolder

          mv ./dist/nlsam_denoising* ./
          ./nlsam_denoising* --help

      - uses: actions/upload-artifact@v4
        with:
          name: nlsam_${{ env.version }}_${{ runner.os }}_${{ runner.arch }}
          path: |
                nlsam_denoising
                nlsam_denoising.exe
                CHANGELOG.md
                README.md
                LICENSE
                example/*
